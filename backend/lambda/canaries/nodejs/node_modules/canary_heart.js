const synthetics = require('Synthetics');
const log = require('SyntheticsLogger');
const syntheticsConfiguration = synthetics.getConfiguration();

// ----------------------------------------------------------------------------
// BASIC SYNTHETICS CONFIGURATION ---------------------------------------------
const stepConfig = {
  includeRequestHeaders: false,
  includeResponseHeaders: false,
  includeRequestBody: false,
  includeResponseBody: false,
  continueOnHttpStepFailure: false,
};
syntheticsConfiguration.setConfig({
  restrictedHeaders: ['Authorization'],
  restrictedUrlParameters: [],
});

// ----------------------------------------------------------------------------
// DEFINING OUR REQUEST OPTIONS -----------------------------------------------
const url = process.env.BACKEND_URL;
const hostname = url.replace(/^https?:\/\/|\/.*$/g, '');
const port = 443;
const protocol = 'https:';
const path = `/prod/health`;
const method = 'GET';
const requestConfig = { path, method, hostname, port, protocol };

// ----------------------------------------------------------------------------
// HELPER FUNCTIONS -----------------------------------------------------------
const validateSuccessful = (res) => {
  if (res.statusCode < 200 || res.statusCode > 299) {
    const errorMessage = `REST call failed: ${res.statusCode} ${res.statusMessage}`;
    log.error(errorMessage);
    throw new Error(errorMessage);
  }
};

// ----------------------------------------------------------------------------
// TEST JOURNEY ---------------------------------------------------------------
const journey = async () => {
  log.info(`Executing heartbeat [url=${url}${path}]`);
  await synthetics.executeHttpStep('Get Repositories', requestConfig, validateSuccessful, stepConfig);
  log.info('Heartbeat successful');
};

exports.handler = async () => journey();
